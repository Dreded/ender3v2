# Adds print macros such as start print and end print.
# in cura, as start gcode you can define "START_PRINT" and end gcode "END_PRINT"


######################################################################
# Start Print and End Print
######################################################################

# Replace the slicer's custom start and end g-code scripts with
# START_PRINT and END_PRINT.

[gcode_macro START_PRINT]
gcode:
    CLEAR_PAUSE
    M117 Heating Up
    M104 S180                   ;Start Heating to 180/Don't Cool Below
    M190 S{T_BED}               ;Wait for bed heat. We do this first to let it soak a bit
    ;{% if printer.extruder.temperature < 180 %}
    ;    M109 S180               ;wait till nozzle at 180, then continue(no oozing)
    ;{% endif %}

    M117 Going Home.
    G90                         ; use absolute coords
    M83                         ; Extruder Relative Mode
    G29                         ; Home Printer
    M117 Heating Nozzle
    M109 S{T_EXTRUDER}
    G28 Z                       ; Home Z with a hot nozzle?
    SET_GCODE_OFFSET Z=-.25    ;Adjust Z Offset as needed
 
    PRIME_LINE
    M117 Autobots Roll Out!!

[gcode_macro G29]
gcode:
    BED_MESH_CLEAR
    G28
    Z_TILT_ADJUST
    G28
    BED_MESH_CALIBRATE
    {% set x_middle = printer.toolhead.axis_maximum.x|float / 2 %}
    {% set y_middle = printer.toolhead.axis_maximum.y|float / 2 %}
    G0 X{x_middle} Y{y_middle} Z30 F6000

[gcode_macro END_PRINT]
gcode:
    SAVE_GCODE_STATE NAME=end_print
    M117 Done printing :)
    G91
    G1 E-0.5 F3600  ;Retract
    G1 Z+10 F3000   ;Move Z Up
    G90             ;Absolute Movement
    {% set x_max = printer.toolhead.axis_maximum.x|float %}
    {% set y_max = printer.toolhead.axis_maximum.y|float %}
    G1 X{x_max} Y{y_max} F2000

    M104 S0         ;Disable Hot End
    M140 S0         ;Disable Heat Bed
    RESTORE_GCODE_STATE NAME=end_print
    M84             ;Disable Steppers
    BED_MESH_CLEAR

[gcode_macro PRIME_LINE]
gcode: 
    M117 Prime Line
    G1 X40 Y3 F2000.0   ;Move to start position
    G1 Z0.28            ;Move to a high Z Height
    G92 E0.0            ;Reset Extruder
    G1 X80 E10 F1000.0  ;Draw the first line
    G1 Y1 F1000         ;Move Over
    G1 X40 E6.0 F1000.0 ;draw second line
    G1 E-0.5 F3000      ;retract to avoid stringing
    G1 X40.5 E0 F1000   ;wipe back to break string
    G1 X35 E0 F1000     ;wipe forward to break string
    G92 E0.0            ;Reset Extruder
 
# [homing_override]
# gcode:
#     G90 ; Use absolute position mode
#     G1 Z10 ; Move up 10mm
#     G28 X Y
#     G1 X117 Y150 F6000 ; Change the X and Y coordinates to the center of your print bed
#     G28 Z
# set_position_z: 0.0

#set accel and Decel like marlin
[gcode_macro M204]
rename_existing:            M204.1
default_parameter_F:        0.75
gcode:
    {% if 'S' in params %}
        SET_VELOCITY_LIMIT ACCEL={ S } ACCEL_TO_DECEL={ S|float * F|float }
    {% endif %}
    {% if 'P' in params %}
        SET_VELOCITY_LIMIT ACCEL={ P } ACCEL_TO_DECEL={ P|float * F|float }
    {% endif %}

[gcode_macro M205]
gcode:
    {% if 'X' in params %}
        SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY={ X }
    {% endif %}

# LOW_TEMP_CHECK checks if there is a setpoint for the  extruder. Untested! 
# - If this setpoint is reached, continue. 
# - If not, heat to setpoint.
# - If no setpoint, heat to parameter T (default@200)
[gcode_macro LOW_TEMP_CHECK]
gcode: 
    {% if printer.extruder.target != 0 %} # if there is a setpoint for extruder
        {% if printer.extruder.temperature < printer.extruder.target %} # if not reached, heat
            M117 Heating from {printer.extruder.temperature} to {printer.extruder.target}.
            M109 S{printer.extruder.target|float} 
        {% endif %}
    {% else %} # if no setpoint for extruder
        {% if printer.extruder.target < T %}  # heat to T.
            M117 No setpoint, heating to {T}.
            M109 S{T}
        {% endif %}
    {% endif %}
    
# filament change 

[gcode_macro UNLOAD]
gcode:
  G91
  G1 E5.0 F1200
  G1 E3.0 F1600
  G1 E-10 F7000
  G1 E-40 F3000
  G90

[gcode_macro M600]
gcode:
  PAUSE_MACRO
  UNLOAD
[gcode_macro RUNOUT_MACRO]
gcode:
    M117 Filament Runout Detected!
    PAUSE_MACRO
    
[gcode_macro PAUSE_MACRO]
variable_bed_temp: 0
variable_extruder_temp: 0
gcode:
  # Save target temperature to bed_temp variable
  SET_GCODE_VARIABLE MACRO=PAUSE_MACRO VARIABLE=bed_temp VALUE={printer.heater_bed.target}
  SET_GCODE_VARIABLE MACRO=PAUSE_MACRO VARIABLE=extruder_temp VALUE={printer.extruder.target}
  # Disable bed heater
  M140
  M117 Parking... 
  M104 S0
  M140 S0
  PAUSE
  SET_IDLE_TIMEOUT TIMEOUT=28800 # 8hours

[gcode_macro PURGE]
gcode:
  M117 Let The Purge Begin!
  G91
  G1 E45.0 F250
  G90

#[gcode_macro LOAD_FILAMENT]
#gcode:
#  M117  LOADING...
#  G91
#  G4 P900
#  G1 E45.0 F250 #PURGE
#  G90
#  RESUME_MACRO

[gcode_macro RESUME_MACRO]
gcode:  # Restore temperature
  M117 Heating Back Up...
  M140 S{printer["gcode_macro PAUSE_MACRO"].bed_temp}
  M104 S{printer["gcode_macro PAUSE_MACRO"].extruder_temp}
  M190 S{printer["gcode_macro PAUSE_MACRO"].bed_temp}
  M109 S{printer["gcode_macro PAUSE_MACRO"].extruder_temp}

  SET_IDLE_TIMEOUT TIMEOUT=600 # 10m
  M117  RESUMING...
  RESUME

[gcode_macro RESUME_FROM_RUNOUT]
gcode:  # Restore temperature
  M117 Heating Back Up...
  M140 S{printer["gcode_macro PAUSE_MACRO"].bed_temp}
  M104 S{printer["gcode_macro PAUSE_MACRO"].extruder_temp}
  M190 S{printer["gcode_macro PAUSE_MACRO"].bed_temp}
  M109 S{printer["gcode_macro PAUSE_MACRO"].extruder_temp}

  SET_IDLE_TIMEOUT TIMEOUT=600 # 10m
  PURGE
  M117  RESUMING...
  RESUME